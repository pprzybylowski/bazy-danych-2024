
ZADANIE 1

CREATE TABLE postac(id_postaci INTEGER primary key auto_increment, nazwa VARCHAR(40), rodzaj ENUM('wiking','ptak','kobieta'), data_ur DATE, wiek INTEGER unsigned);
INSERT INTO postac(nazwa, rodzaj, data_ur, wiek) 
VALUES ('Bjorn', 'wiking', '1980-05-14', 44),
       ('Drozd', 'ptak', '2022-06-01', 2),
       ('Tesciowa', 'kobieta', '1936-10-12', 87); 
UPDATE postac
SET wiek = 88
WHERE nazwa ='Tesciowa';




ZADANIE 2
CREATE TABLE walizka(id_walizki INTEGER auto_increment primary key, pojemnosc INTEGER unsigned, kolor ENUM('rozowy','czerwony','teczowy','zolty') DEFAULT 'rozowy', id_wlasciciela INTEGER, FOREIGN KEY (id_wlasciciela) REFERENCES postac(id_postaci) ON DELETE CASCADE);

INSERT INTO walizka(pojemnosc, kolor, id_wlasciciela)
VALUES
(50, 'rozowy', (SELECT id_postaci FROM postac WHERE nazwa = 'Bjorn'));
(60, 'zolty', (SELECT id_postaci FROM postac WHERE nazwa = 'Tesciowa'));


ZADANIE 3
CREATE TABLE izba(adres_budynku VARCHAR(100), nazwa_izby VARCHAR(100), metraz INTEGER unsigned, wlasciciel INTEGER, primary key (adres_budynku, nazwa_izby), foreign key (wlasciciel) REFERENCES postac(id_postaci) ON DELETE SET NULL);

ALTER TABLE izba ADD COLUMN kolor_izby VARCHAR(20) DEFAULT 'czarny' AFTER metraz;

INSERT INTO izba (adres_budynku, nazwa_izby, metraz, wlasciciel)
VALUES('Wioska 1', 'spizarnia', 20, (SELECT id_postaci FROM postac WHERE nazwa = 'Bjorn'));





ZADANIE 4
CREATE TABLE przetwory (id_przetworu INTEGER auto_increment primary key,
rok_produkcji YEAR DEFAULT (1654), 
id_wykonawcy INTEGER, 
zawartosc VARCHAR(100), 
dodatek VARCHAR(100) DEFAULT 'papryczka chilli', 
id_konsumenta INTEGER, 
FOREIGN KEY(id_wykonawcy) REFERENCES postac(id_postaci),
FOREIGN KEY (id_konsumenta) REFERENCES postac(id_postaci));


ZADANIE 5
INSERT INTO postac(nazwa, rodzaj, data_ur, wiek) VALUES
('Olaf', 'wiking', '1010-01-01', 30),
('Erik', 'wiking', '1015-02-02', 28),
('Ragnar', 'wiking', '1005-03-03', 35),
('Leif', 'wiking', '1022-04-04', 22),
('gunnar', 'wiking', '1018-05-05', 26);

CREATE TABLE statek(
nazwa_statku VARCHAR(50) PRIMARY KEY,
rodzaj_statku ENUM('Drakkar', 'Knorr', 'Langskip'),
data_wodowania DATE,
max_ladownosc INTEGER UNSIGNED
);

INSERT INTO statek(nazwa_statku, rodzaj_statku, data_wodowania, max_ladownosc) VALUES
('Orzel','Drakkar', '1050-06-06', 1000),
('Wilk Morski', 'Knorr', '1055-07-07', 800);

ALTER TABLE postac 
ADD funkcja VARCHAR(50);


UPDATE postac SET funkcja = 'kapitan' WHERE nazwa = 'Bjorn';

ALTER TABLE postac 
ADD id_statku VARCHAR(50),
ADD FOREIGN KEY (id_statku) REFERENCES statek(nazwa_statku);

UPDATE postac SET id_statku = 'Orzel' WHERE nazwa IN ('Bjorn','Olaf','Erik');
UPDATE postac SET id_statku = 'Wilk Morski' WHERE nazwa IN ('Ragnar','Leif','Gunnar', 'Drozd');

DELETE FROM izba WHERE nazwa_izby = 'spiżarnia' AND adres_budynku = 'Bjorn_dom';
//////////////////////////////////////////////////////////////////
LEKCJA 2
ZADANIE 1
DELETE FROM postac
WHERE rodzaj = 'wiking'
AND nazwa != 'Bjorn'
ORDER BY wiek DESC
LIMIT 2;


ZADANIE 2


ALTER TABLE walizka DROP FOREIGN KEY walizka_ibfk_1;
ALTER TABLE przetwory DROP FOREIGN KEY przetwory_ibfk_1;
ALTER TABLE postac DROP PRIMARY KEY;

ALTER TABLE postac ADD pesel CHAR(11);
ALTER TABLE postac ADD PRIMARY KEY(pesel);
ALTER TABLE postac MODIFY rodzaj ENUM('wiking', 'ptak','kobieta','syrena', 'waz');
INSERT INTO postac (pesel, nazwa, rodzaj, data_ur,wiek) VALUES
('12345678901', 'Gertruda Nieszczera', 'syrena','1000-01-01', 500);
//////////////////////////////////////////////////////////////////



ZADANIE 3

UPDATE postac SET id_statku = (SELECT nazwa_statku FROM statek WHERE nazwa_statku = 'Orzel')
WHERE nazwa LIKE'%a%';

UPDATE statek
SET max_ladownosc = max_ladownosc * 0.7
WHERE YEAR(data_wodowania) BETWEEN 1900 AND 1999;

ALTER TABLE postac
ADD CONSTRAINT wiek_check CHECK (wiek <=1000);
//////////////////////////////////////////////////////////////////////////


ZADANIE 4

INSERT INTO postac (pesel, nazwa, rodzaj, data_ur, wiek) VALUES
('09876543210','Loko','waz','1000-01-01', 1000);


CREATE TABLE marynarz AS
SELECT*FROM postac 
WHERE id_statku IS NOT NULL;

ALTER TABLE marynarz ADD PRIMARY KEY (pesel);
////////////////////////////////////////////////////////////////////////////


ZADANIE 5
UPDATE postac SET id_statku = NULL;

DELETE FROM postac 
WHERE rodzaj = 'wiking'
LIMIT 1;

DELETE FROM statek;
DROP TABLE statek;

CREATE TABLE zwierz(
id INTEGER PRIMARY KEY AUTO_INCREMENT,
nazwa VARCHAR(50),
wiek INTEGER);


INSERT INTO zwierz(nazwa,wiek)
SELECT nazwa, wiek
FROM postac 
WHERE rodzaj IN('ptak','waz');
//////////////////////////////////////////////////////////////////////////////////






////////////////
LEKCJA 3
////////////////

ZADANIE 1

CREATE TABLE kreatura AS SELECT * FROM wikingowie.kreatura;
CREATE TABLE zasob AS SELECT * FROM wikingowie.zasob;
CREATE TABLE ekwipunek AS SELECT * FROM wikingowie.ekwipunek;


SELECT * FROM zasob;

SELECT * FROM zasob WHERE rodzaj = 'jedzenie';

SELECT idZasobu, ilosc FROM ekwipunek WHERE idKreatury IN (1 ,3 ,5);


////////////////////////////////////////////////////////////////////////////////

ZADANIE 2

SELECT * FROM kreatura WHERE rodzaj != 'wiedźma' AND waga >=50;

SELECT * FROM zasob WHERE waga BETWEEN 2 AND 5;

SELECT * FROM kreatura WHERE nazwa LIKE '%or%' AND waga BETWEEN 30 AND 70;

//////////////////////////////////////////////////////////////////////////////////

ZADANIE 3

SELECT * FROM zasob WHERE MONTH(dataPozyskania) IN (7, 8);

SELECT * FROM kreatura ORDER BY dataUR ASC LIMIT 5;

///////////////////////////////////////////////////////////////////////////////////


ZADANIE 4

SELECT DISTINCT rodzaj FROM zasob;

SELECT CONCAT(nazwa, ' - ', rodzaj) AS nazwa_rodzaj FROM kreatura WHERE rodzaj like '%wi%';

SELECT idZasobu, SUM(ilosc * waga) AS calkowaita_waga
FROM zasob 
WHERE YEAR(dataPozyskania) BETWEEN 2000 AND 2007
GROUP BY idZasobu;

////////////////////////////////////////////////////////////////////////////////////


ZADANIE 5

SELECT idZasobu, waga * 0.7 AS masa_jedzenia, waga * 0.3 AS waga_odpadow
FROM zasob
WHERE rodzaj = 'jedzenie';


SELECT * FROM zasob WHERE rodzaj IS NULL;


SELECT DISTINCT rodzaj FROM zasob
WHERE nazwa LIKE 'Ba%' OR nazwa LIKE '%os'
ORDER BY rodzaj ASC;